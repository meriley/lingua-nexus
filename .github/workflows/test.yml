name: NLLB Translation System CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sundays at midnight

jobs:
  test-server:
    name: Test Server Component
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f server/requirements.txt ]; then pip install -r server/requirements.txt; fi
        if [ -f server/requirements-dev.txt ]; then pip install -r server/requirements-dev.txt; fi
        
    - name: Run tests
      run: |
        cd server
        python -m pytest tests/ --cov=app --cov-report=xml
        
    - name: Run security scan
      run: |
        cd server
        bandit -r app/
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        flags: server
        fail_ci_if_error: false
        
  test-userscript:
    name: Test Browser UserScript Component
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: userscript/package.json
        
    - name: Install dependencies
      run: |
        cd userscript
        npm ci
        
    - name: Run ESLint
      run: |
        cd userscript
        npx eslint *.js
        
    - name: Run tests
      run: |
        cd userscript
        npm test -- --coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        flags: userscript
        fail_ci_if_error: false
        
  test-ahk:
    name: Test AutoHotkey Component
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install AutoHotkey
      uses: crazy-max/ghaction-chocolatey@v2
      with:
        args: install autohotkey --params="'/NoDesktopShortcut /NoStartMenuShortcut'" -y
        
    - name: Run tests
      shell: cmd
      run: |
        cd ahk\tests
        "C:\Program Files\AutoHotkey\AutoHotkey.exe" run_tests.ahk
        
  integration:
    name: Integration Tests
    needs: [test-server, test-userscript, test-ahk]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and start containers
      run: |
        docker-compose build
        docker-compose up -d
        
    - name: Wait for services to start
      run: sleep 30
      
    - name: Run integration tests
      run: |
        # Here we would run integration tests that test all components together
        # For now, we'll just check if the services are running
        curl -s http://localhost:8000/health | grep "healthy"
        
    - name: Shutdown Docker services
      run: docker-compose down