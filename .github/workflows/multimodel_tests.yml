name: Multi-Model Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  fast-tests:
    name: Fast Tests (Unit + Integration)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          /tmp/e2e_model_cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r server/requirements.txt
        pip install -r server/requirements-dev.txt
    
    - name: Run Unit Tests
      run: |
        cd server
        pytest tests/unit/ -v --tb=short
    
    - name: Run Integration Tests
      run: |
        cd tests/e2e
        pytest test_multimodel_integration.py -v -m "not slow"
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: fast-test-results
        path: test_reports/

  e2e-tests:
    name: Full E2E Tests (with real models)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache models
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/huggingface
          /tmp/e2e_model_cache
        key: ${{ runner.os }}-models-${{ hashFiles('server/app/models/*.py') }}
        restore-keys: |
          ${{ runner.os }}-models-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r server/requirements.txt
        pip install -r server/requirements-dev.txt
    
    - name: Run E2E Tests
      env:
        E2E_USE_TEST_MODELS: true
        MODEL_CACHE_DIR: /tmp/e2e_model_cache
      run: |
        cd tests/e2e
        pytest test_multimodel_e2e_refactored.py -v -m "slow" --tb=short
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: e2e-test-results
        path: test_reports/
    
    - name: Upload performance metrics
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: performance-metrics
        path: performance_reports/

  nightly-full-suite:
    name: Nightly Full Test Suite
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || contains(github.event.head_commit.message, '[full-tests]')
    timeout-minutes: 60
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r server/requirements.txt
        pip install -r server/requirements-dev.txt
    
    - name: Run All Tests
      run: |
        # Run all tests including slow ones
        pytest tests/e2e/ -v --tb=short
        
        # Run server tests
        cd server && pytest -v